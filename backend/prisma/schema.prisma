// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Flashcard {
  id         Int               @id @default(autoincrement())
  question   String
  answer     String
  hidden     Boolean           @default(false)
  createdAt  DateTime          @default(now())
  difficulty String
  set        FlashcardSet      @relation(fields: [setId], references: [id])
  setId      Int 
}

model FlashcardSet {
  id          Int              @id @default(autoincrement())
  name        String
  cards       Flashcard[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  comments    Comment[]
  collections Collection[]     @relation("CollectionSets")
  User        User             @relation(fields: [userId], references: [id])
  userId      Int
}

model Collection {
  id            Int            @id @default(autoincrement())
  comment       String
  flashcardSets FlashcardSet[] @relation("CollectionSets")
  userId        Int
  user          User           @relation(fields: [userId], references: [id])
}

model User {
  id            Int            @id @default(autoincrement())
  username      String         @unique
  password      String
  admin         Boolean        @default(false)
  collections   Collection[]
  flashcardSets FlashcardSet[]
  comments      Comment[]
}

model Settings {
  id         Int               @id @default(autoincrement())
  dailyLimit Int               @default(20)
}

model Comment {
  id         Int               @id @default(autoincrement())
  comment    String
  set        FlashcardSet      @relation(fields: [setId], references: [id])
  setId      Int
  user       User              @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime          @default(now())
  rating     Int               @default(0)
}

